df <- read.csv("data/StateLevelForest.csv")
df
df %>%
select(-x)
library(tidyverse)
df <- read.csv("data/StateLevelForest.csv")
df %>%
select(-X)
df %>%
select(-X) %>%
pivot_longer(2:12)
df %>%
select(-X) %>%
pivot_longer(2:13)
df %>%
select(-X) %>%
pivot_longer(2:13) %>%
select(state, year = name, forest = value)
df1 <- df %>%
select(-X) %>%
pivot_longer(2:13) %>%
select(state, year = name, forest = value) %>%
colnames(df)
colnames(df)
colnames(df)[3:14]
years <- str_sub(colnames(df)[3:14], 2,1L)
years
years <- str_sub(colnames(df)[3:14], 2,-1L)
years
years <- as.numeric(str_sub(colnames(df)[3:14], 2,-1L))
years <- as.numeric(str_sub(colnames(df)[3:14], 2,-1L))
years
df %>%
select(-X) %>%
pivot_longer(2:13) %>%
select(state, Xyear = name, forest = value) %>%
nest(Xyear)
df %>%
select(-X) %>%
pivot_longer(2:13) %>%
select(state, Xyear = name, forest = value) %>%
group_by(Xyear) %>%
nest()
df %>%
select(-X) %>%
pivot_longer(2:13) %>%
select(state, Xyear = name, forest = value) %>%
group_by(Xyear) %>%
nest() %>%
mutate(year = years)
years
df %>%
select(-X) %>%
pivot_longer(2:13) %>%
select(state, Xyear = name, forest = value) %>%
group_by(Xyear) %>%
nest() %>%
ungroup() %>%
mutate(year = years)
df %>%
select(-X) %>%
pivot_longer(2:13) %>%
select(state, Xyear = name, forest = value) %>%
group_by(Xyear) %>%
nest() %>%
ungroup() %>%
mutate(year = years) %>%
unnest()
df %>%
select(-X) %>%
pivot_longer(2:13) %>%
select(state, Xyear = name, forest = value) %>%
group_by(Xyear) %>%
nest() %>%
ungroup() %>%
mutate(year = years) %>%
unnest() %>%
select(year, state, forest)
df %>%
select(-X) %>%
pivot_longer(2:13) %>%
select(state, Xyear = name, forest = value) %>%
group_by(Xyear) %>%
nest() %>%
ungroup() %>%
mutate(year = years) %>%
unnest(cols = c(data)) %>%
select(year, state, forest)
df %>%
select(-X) %>%
pivot_longer(2:13) %>%
select(state, Xyear = name, forest = value) %>%
group_by(Xyear) %>%
nest() %>%
ungroup() %>%
mutate(year = years) %>%
unnest(cols = c(data)) %>%
select(year, state, forest) %>%
mutate(year = as.numeric(year),
forest = as.numeric(forest))
df %>%
select(-X) %>%
pivot_longer(2:13) %>%
select(state, Xyear = name, forest = value) %>%
group_by(Xyear) %>%
nest() %>%
ungroup() %>%
mutate(year = years) %>%
unnest(cols = c(data)) %>%
select(year, state, forest) %>%
mutate(year = as.numeric(year),
thousands_of_acres = as.numeric(forest))
df %>%
select(-X) %>%
pivot_longer(2:13) %>%
select(state, Xyear = name, forest = value) %>%
group_by(Xyear) %>%
nest() %>%
ungroup() %>%
mutate(year = years) %>%
unnest(cols = c(data)) %>%
select(year, state, forest) %>%
mutate(year = as.numeric(year),
thousands_of_acres = as.numeric(forest)) %>%
select(-forest)
df %>%
select(-X) %>%
pivot_longer(2:13) %>%
select(state, Xyear = name, forest = value) %>%
group_by(Xyear) %>%
nest() %>%
ungroup() %>%
mutate(year = years) %>%
unnest(cols = c(data)) %>%
select(year, state, forest) %>%
mutate(year = as.numeric(year),
forest_thousands_of_acres = as.numeric(forest)) %>%
select(-forest)
df1 <- df %>%
select(-X) %>%
pivot_longer(2:13) %>%
select(state, Xyear = name, forest = value) %>%
group_by(Xyear) %>%
nest() %>%
ungroup() %>%
mutate(year = years) %>%
unnest(cols = c(data)) %>%
select(year, state, forest) %>%
mutate(year = as.numeric(year),
forest_thousands_of_acres = as.numeric(forest)) %>%
select(-forest)
write.csv("data/StateLevelForest2.csv")
write.csv(df1, "data/StateLevelForest2.csv")
read.csv("data/StateLevelForest2.csv")
write.csv(df1, "data/StateLevelForest2.csv", col.names = NA )
write.csv(df1, "data/StateLevelForest2.csv", col.names = NULL )
read.csv("data/StateLevelForest2.csv")
write.csv(df1, "data/StateLevelForest2.csv", row.names = NULL )
write.csv(df1, "data/StateLevelForest2.csv", row.names = NA )
vroom::vroom_write(df1, "data/StateLevelForest2.csv", row.names = NA)
vroom::vroom_write(df1, "data/StateLevelForest2.csv", row.names = NULL)
vroom::vroom_write(df1, "data/StateLevelForest2.csv")
read.csv("data/StateLevelForest2.csv")
write.csv(df1, "data/StateLevelForest2.csv", row.names = FALSE)
read.csv("data/StateLevelForest2.csv")
devtools::document()
devtools::document()
StateLevelForest
StateLevelForest <- read.csv("data/StateLevelForest.csv")
StateLevelForest
usethis::use_data(StateLevelForest, overwrite = TRUE)
devtools::document()
devtools::build()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
?use_ccby_license()
devtools::check()
usethis::use_ccby_license()
devtools::check()
usethis::use_vignette("my-vignette")
usethis::use_vignette("vignette")
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
---
# title: "Using the StateLevelForest Dataset"
author: "Gates Dupnt"
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
StateLevelForest
unqiue(StateLevelForest$year)
unique(StateLevelForest$year)
devtools::build_vignettes()
library(statebins)
install.packages(statebins)
install.packages("statebins")
statebins::statebins()
df
df2
df1
library(StateLevelForest)
cover_1630 <- df1 %>%
group_by(state) %>%
mutate(X1630 = if_else(year == min(year), forest_thousands_of_acres, 0)) %>%
mutate(X1630 = max(X1630)) %>%
ungroup() %>%
filter(year != min(year))
cover_1630
ggplot(df1, aes(x = year, y = forest_thousands_of_acres)) +
facet_geo(~state, scales = "free_y") +
geom_point(aes(x = 2000, y = 0), color = NA) +
geom_hline(aes(yintercept = X1630), color = "red", linewidth = 1) +
geom_point() +
geom_line() +
scale_x_continuous(breaks = scales::pretty_breaks()) +
scale_y_continuous(breaks = scales::pretty_breaks()) +
labs(x = "Year", y = "Forest area (in thousands of acres)") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
library(ggplot2)
ggplot(df1, aes(x = year, y = forest_thousands_of_acres)) +
facet_geo(~state, scales = "free_y") +
geom_point(aes(x = 2000, y = 0), color = NA) +
geom_hline(aes(yintercept = X1630), color = "red", linewidth = 1) +
geom_point() +
geom_line() +
scale_x_continuous(breaks = scales::pretty_breaks()) +
scale_y_continuous(breaks = scales::pretty_breaks()) +
labs(x = "Year", y = "Forest area (in thousands of acres)") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
library(dplyr)
library(ggplot2)
??facet_geo
library(geofacet)
ggplot(df1, aes(x = year, y = forest_thousands_of_acres)) +
facet_geo(~state, scales = "free_y") +
geom_point(aes(x = 2000, y = 0), color = NA) +
geom_hline(aes(yintercept = X1630), color = "red", linewidth = 1) +
geom_point() +
geom_line() +
scale_x_continuous(breaks = scales::pretty_breaks()) +
scale_y_continuous(breaks = scales::pretty_breaks()) +
labs(x = "Year", y = "Forest area (in thousands of acres)") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
ggplot(cover_1630, aes(x = year, y = forest_thousands_of_acres)) +
facet_geo(~state, scales = "free_y") +
geom_point(aes(x = 2000, y = 0), color = NA) +
geom_hline(aes(yintercept = X1630), color = "red", linewidth = 1) +
geom_point() +
geom_line() +
scale_x_continuous(breaks = scales::pretty_breaks()) +
scale_y_continuous(breaks = scales::pretty_breaks()) +
labs(x = "Year", y = "Forest area (in thousands of acres)") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
